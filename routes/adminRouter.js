const router = require('express').Router();
const adminController = require('../webServices/controllers/adminController');
const basicAuth = require('../middleware/auth');

router.post('/login', adminController.login)
router.post('/forgotPassword', adminController.forgotPassword)
router.post('/resetPassword', adminController.resetPassword)
router.post('/changePassword', adminController.changePassword)
router.post('/userManagement',adminController.userManagement)
router.post('/adminProfile',adminController.adminProfile)
router.post('/editAdminProfile', adminController.editAdminProfile)
router.post('/viewUser',adminController.viewUser)
router.post('/dashboard',adminController.dashboard)
router.post('/editSudAdmin',adminController.editSudAdmin)
router.post('/addSudAdmin',adminController.addSudAdmin)
router.post('/viewSubAdmin',adminController.viewSubAdmin)
router.post('/subAdminManagement',adminController.subAdminManagement)
router.post('/addNews', adminController.addNews)
router.post('/newsManagement', adminController.newsManagement)
router.post('/viewNews',adminController.viewNews)
router.post('/viewJob',adminController.viewJob)
//------------------------------industry----------------
router.post("/addIndustry", adminController.addIndustry)
router.post("/deleteIndustry", adminController.deleteIndustry)
router.post("/editIndustry", adminController.editIndustry)
router.post("/industryList", adminController.industryList)
router.post("/industryBlockUnblock", adminController.industryBlockUnblock)
//////
router.post('/searchJobByPostedUser', adminController.searchJobByPostedUser)
router.post('/jobManagement',adminController.jobManagement)
router.post('/jobTransaction', adminController.jobTransaction)
router.post('/deleteJobTranasaction',adminController.deleteJobTranasaction)
router.post('/viewApplicant',adminController.viewApplicant)
router.post('/viewAllApplicant',adminController.viewAllApplicant)
router.post('/applicantManagement',adminController.applicantManagement)
router.post('/viewVideo',adminController.viewVideo)
router.post('/videoManagement',adminController.videoManagement)
router.post('/viewGroup',adminController.viewGroup)
router.post('/groupManagement',adminController.groupManagement)
router.post('/viewClass',adminController.viewClass)
router.post('/classManagement',adminController.classManagement)
router.post('/viewEvent',adminController.viewEvent)
router.post('/eventManagement',adminController.eventManagement)
router.post('/viewStaticContent',adminController.viewStaticContent)
router.post('/editStaticContent',adminController.editStaticContent)
router.post('/imageUpload',adminController.imageUpload)

router.post('/viewDiscussionForm',adminController.viewDiscussionForm)
router.post('/searchDiscussionByCreatar', adminController.searchDiscussionByCreatar)
router.post('/discussionFormManagement',adminController.discussionFormManagement)

router.post('/addBanner',adminController.addBanner)
router.post('/editBanner',adminController.editBanner)
router.post('/viewBanner',adminController.viewBanner)
router.post('/deleteBanner',adminController.deleteBanner)

router.post('/addCategory',adminController.addCategory)
router.post('/editCategory',adminController.editCategory)
router.post('/viewCategory',adminController.viewCategory)
router.post('/categoryManagment',adminController.categoryManagment)

router.post('/addSubCategory',adminController.addSubCategory)
router.post('/editSubCategory',adminController.editSubCategory)
router.post('/viewSubCategory',adminController.viewSubCategory)
router.post('/subCategoryManagment',adminController.subCategoryManagment)

router.post('/addAuctionCategory',adminController.addAuctionCategory)
router.post('/editAuctionCategory',adminController.editAuctionCategory)
router.post('/viewAuctionCategory',adminController.viewAuctionCategory)
router.post('/auctionCategoryManagment',adminController.auctionCategoryManagment)
router.post('/viewAuctionSubCategory', adminController.viewAuctionSubCategory)

router.post('/addSubAuctionCategory',adminController.addSubAuctionCategory)
router.post('/viewAuctionSubCategory',adminController.viewAuctionSubCategory)
router.post('/editAuctionSubCategory',adminController.editAuctionSubCategory)
router.post('/auctionSubCategoryManagment',adminController.auctionSubCategoryManagment)

router.post('/viewAuctionProduct',adminController.viewAuctionProduct)
router.post('/auctionProductManagment',adminController.auctionProductManagment)

router.post('/viewAdv', adminController.viewAdv)
router.post('/advAction', adminController.advAction)


router.post('/viewProduct',adminController.viewProduct)
router.post('/productManagment',adminController.productManagment)

router.post('/addFaq',adminController.addFaq)
router.post('/viewFaq',adminController.viewFaq)
router.post('/editFaq',adminController.editFaq)
router.post('/deleteFaq',adminController.deleteFaq)
router.post('/viewNonProfit', adminController.viewNonProfit)
// router.post("nonProfitManagement", adminController.nonProfitManagement)
router.post("/viewNonProfitEvent", adminController.viewNonProfitEvent)
router.post('/viewAllSubCategory', adminController.viewAllSubCategory)
router.post('/nonProfitManagement', adminController.nonProfitManagement)
 router.post('/addGif',adminController.addGif)
 router.post('/viewGif',adminController.viewGif)
router.post('/deleteGif',adminController.deleteGif)

router.post('/addSticker',adminController.addSticker)
router.post('/viewSticker',adminController.viewSticker)
router.post('/stickerManagment', adminController.stickerManagment)

router.post('/setPayment',adminController.setPayment)
router.post('/getSetPayment', adminController.getSetPayment)
router.post('/editSetPayment',adminController.editSetPayment)
router.post('/transactionManagement',adminController.transactionManagement)
router.post('/transactionManag', adminController.transactionManag)
router.post('/reportManagement', adminController.reportManagement)
router.post('/viewReport', adminController.viewReport)

router.post('/deleteReport',adminController.deleteReport)

router.post('/viewAllReport', adminController.viewAllReport)
router.post('/deleteGeneralReport',adminController.deleteGeneralReport)
router.post('/orderManagement', adminController.orderManagement)
router.post('/editOrderManagement', adminController.editOrderManagement)
router.post('/deleteOrder', adminController.deleteOrder)
router.post('/editProduct', adminController.editProduct)
router.post('/editAuctionProduct', adminController.editAuctionProduct)

router.post('/updatedReport', adminController.updatedReport)
router.post('/orderDetailsByStatus', adminController.orderDetailsByStatus)
router.post('/auctionProductOrderDetailsByStatus', adminController.auctionProductOrderDetailsByStatus)
router.post('/totalParticipant', adminController.totalParticipant)
router.post('/updatedNews', adminController.updatedNews)
router.get('/dashboardMng', adminController.dashboardMng)
router.post('/totalOrder', adminController.totalOrder)
router.post('/notificationList', adminController.notificationList)
router.post('/deleteNotification', adminController.deleteNotification)
router.post('/refundForProduct', adminController.refundForProduct)
router.post('/refundForProduct', adminController.refundForProduct)
router.post('/viewPage', adminController.viewPage)
router.post('/pageManagement', adminController.pageManagement)
router.post('/sellerPaymentTransfer', adminController.sellerPaymentTransfer)
router.post('/auctionOrderManagement', adminController.auctionOrderManagement)
router.post('/deleteAuctionOrder', adminController.deleteAuctionOrder)
router.post('/editAuctionOrder', adminController.editAuctionOrder)
router.post('/sellerTransferForAuction',adminController.sellerTransferForAuction)
router.post('/refundForAuction',adminController.refundForAuction)

module.exports=router